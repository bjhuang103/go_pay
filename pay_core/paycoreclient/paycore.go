// Code generated by goctl. DO NOT EDIT!
// Source: pay_core.proto

//go:generate mockgen -destination ./paycore_mock.go -package paycoreclient -source $GOFILE

package paycoreclient

import (
	"context"

	"github.com/bjhuang103/go_pay/pay_core/pay_core"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	PayReq     = pay_core.PayReq
	PayResp    = pay_core.PayResp
	RefundReq  = pay_core.RefundReq
	RefundResp = pay_core.RefundResp

	PayCore interface {
		Pay(ctx context.Context, in *PayReq) (*PayResp, error)
		Refund(ctx context.Context, in *RefundReq) (*RefundResp, error)
	}

	defaultPayCore struct {
		cli zrpc.Client
	}
)

func NewPayCore(cli zrpc.Client) PayCore {
	return &defaultPayCore{
		cli: cli,
	}
}

func (m *defaultPayCore) Pay(ctx context.Context, in *PayReq) (*PayResp, error) {
	client := pay_core.NewPayCoreClient(m.cli.Conn())
	return client.Pay(ctx, in)
}

func (m *defaultPayCore) Refund(ctx context.Context, in *RefundReq) (*RefundResp, error) {
	client := pay_core.NewPayCoreClient(m.cli.Conn())
	return client.Refund(ctx, in)
}
