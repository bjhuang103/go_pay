// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: guarantee_trade.proto

package guarantee_trade

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PrePayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Book  string `protobuf:"bytes,1,opt,name=book,proto3" json:"book,omitempty"`
	Price int64  `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *PrePayReq) Reset() {
	*x = PrePayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guarantee_trade_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrePayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrePayReq) ProtoMessage() {}

func (x *PrePayReq) ProtoReflect() protoreflect.Message {
	mi := &file_guarantee_trade_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrePayReq.ProtoReflect.Descriptor instead.
func (*PrePayReq) Descriptor() ([]byte, []int) {
	return file_guarantee_trade_proto_rawDescGZIP(), []int{0}
}

func (x *PrePayReq) GetBook() string {
	if x != nil {
		return x.Book
	}
	return ""
}

func (x *PrePayReq) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type PrePayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *PrePayResp) Reset() {
	*x = PrePayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guarantee_trade_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrePayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrePayResp) ProtoMessage() {}

func (x *PrePayResp) ProtoReflect() protoreflect.Message {
	mi := &file_guarantee_trade_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrePayResp.ProtoReflect.Descriptor instead.
func (*PrePayResp) Descriptor() ([]byte, []int) {
	return file_guarantee_trade_proto_rawDescGZIP(), []int{1}
}

func (x *PrePayResp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type PayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderNo string `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo,omitempty"`
	Amount  int64  `protobuf:"varint,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *PayReq) Reset() {
	*x = PayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guarantee_trade_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayReq) ProtoMessage() {}

func (x *PayReq) ProtoReflect() protoreflect.Message {
	mi := &file_guarantee_trade_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayReq.ProtoReflect.Descriptor instead.
func (*PayReq) Descriptor() ([]byte, []int) {
	return file_guarantee_trade_proto_rawDescGZIP(), []int{2}
}

func (x *PayReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *PayReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode string `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
}

func (x *PayResp) Reset() {
	*x = PayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_guarantee_trade_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayResp) ProtoMessage() {}

func (x *PayResp) ProtoReflect() protoreflect.Message {
	mi := &file_guarantee_trade_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayResp.ProtoReflect.Descriptor instead.
func (*PayResp) Descriptor() ([]byte, []int) {
	return file_guarantee_trade_proto_rawDescGZIP(), []int{3}
}

func (x *PayResp) GetRetCode() string {
	if x != nil {
		return x.RetCode
	}
	return ""
}

var File_guarantee_trade_proto protoreflect.FileDescriptor

var file_guarantee_trade_proto_rawDesc = []byte{
	0x0a, 0x15, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74,
	0x65, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x50,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22,
	0x1c, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x50, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x3a, 0x0a,
	0x06, 0x70, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x8e,
	0x01, 0x0a, 0x0f, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x50, 0x61, 0x79, 0x12, 0x1a, 0x2e, 0x67,
	0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x70,
	0x72, 0x65, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x75, 0x61, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x65, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x03, 0x70, 0x61, 0x79, 0x12, 0x17, 0x2e, 0x67,
	0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x70,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65,
	0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_guarantee_trade_proto_rawDescOnce sync.Once
	file_guarantee_trade_proto_rawDescData = file_guarantee_trade_proto_rawDesc
)

func file_guarantee_trade_proto_rawDescGZIP() []byte {
	file_guarantee_trade_proto_rawDescOnce.Do(func() {
		file_guarantee_trade_proto_rawDescData = protoimpl.X.CompressGZIP(file_guarantee_trade_proto_rawDescData)
	})
	return file_guarantee_trade_proto_rawDescData
}

var file_guarantee_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_guarantee_trade_proto_goTypes = []interface{}{
	(*PrePayReq)(nil),  // 0: guarantee_trade.prePayReq
	(*PrePayResp)(nil), // 1: guarantee_trade.prePayResp
	(*PayReq)(nil),     // 2: guarantee_trade.payReq
	(*PayResp)(nil),    // 3: guarantee_trade.payResp
}
var file_guarantee_trade_proto_depIdxs = []int32{
	0, // 0: guarantee_trade.guarantee_trade.prePay:input_type -> guarantee_trade.prePayReq
	2, // 1: guarantee_trade.guarantee_trade.pay:input_type -> guarantee_trade.payReq
	1, // 2: guarantee_trade.guarantee_trade.prePay:output_type -> guarantee_trade.prePayResp
	3, // 3: guarantee_trade.guarantee_trade.pay:output_type -> guarantee_trade.payResp
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_guarantee_trade_proto_init() }
func file_guarantee_trade_proto_init() {
	if File_guarantee_trade_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_guarantee_trade_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrePayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guarantee_trade_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrePayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guarantee_trade_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_guarantee_trade_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_guarantee_trade_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_guarantee_trade_proto_goTypes,
		DependencyIndexes: file_guarantee_trade_proto_depIdxs,
		MessageInfos:      file_guarantee_trade_proto_msgTypes,
	}.Build()
	File_guarantee_trade_proto = out.File
	file_guarantee_trade_proto_rawDesc = nil
	file_guarantee_trade_proto_goTypes = nil
	file_guarantee_trade_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GuaranteeTradeClient is the client API for GuaranteeTrade service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GuaranteeTradeClient interface {
	PrePay(ctx context.Context, in *PrePayReq, opts ...grpc.CallOption) (*PrePayResp, error)
	Pay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*PayResp, error)
}

type guaranteeTradeClient struct {
	cc grpc.ClientConnInterface
}

func NewGuaranteeTradeClient(cc grpc.ClientConnInterface) GuaranteeTradeClient {
	return &guaranteeTradeClient{cc}
}

func (c *guaranteeTradeClient) PrePay(ctx context.Context, in *PrePayReq, opts ...grpc.CallOption) (*PrePayResp, error) {
	out := new(PrePayResp)
	err := c.cc.Invoke(ctx, "/guarantee_trade.guarantee_trade/prePay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guaranteeTradeClient) Pay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*PayResp, error) {
	out := new(PayResp)
	err := c.cc.Invoke(ctx, "/guarantee_trade.guarantee_trade/pay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GuaranteeTradeServer is the server API for GuaranteeTrade service.
type GuaranteeTradeServer interface {
	PrePay(context.Context, *PrePayReq) (*PrePayResp, error)
	Pay(context.Context, *PayReq) (*PayResp, error)
}

// UnimplementedGuaranteeTradeServer can be embedded to have forward compatible implementations.
type UnimplementedGuaranteeTradeServer struct {
}

func (*UnimplementedGuaranteeTradeServer) PrePay(context.Context, *PrePayReq) (*PrePayResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrePay not implemented")
}
func (*UnimplementedGuaranteeTradeServer) Pay(context.Context, *PayReq) (*PayResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pay not implemented")
}

func RegisterGuaranteeTradeServer(s *grpc.Server, srv GuaranteeTradeServer) {
	s.RegisterService(&_GuaranteeTrade_serviceDesc, srv)
}

func _GuaranteeTrade_PrePay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrePayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuaranteeTradeServer).PrePay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guarantee_trade.guarantee_trade/PrePay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuaranteeTradeServer).PrePay(ctx, req.(*PrePayReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GuaranteeTrade_Pay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuaranteeTradeServer).Pay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guarantee_trade.guarantee_trade/Pay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuaranteeTradeServer).Pay(ctx, req.(*PayReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GuaranteeTrade_serviceDesc = grpc.ServiceDesc{
	ServiceName: "guarantee_trade.guarantee_trade",
	HandlerType: (*GuaranteeTradeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "prePay",
			Handler:    _GuaranteeTrade_PrePay_Handler,
		},
		{
			MethodName: "pay",
			Handler:    _GuaranteeTrade_Pay_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "guarantee_trade.proto",
}
